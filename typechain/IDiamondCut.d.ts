/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IDiamondCutInterface extends ethers.utils.Interface {
  functions: {
    "diamondCut(tuple[],address,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "diamondCut",
    values: [
      {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      string,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(functionFragment: "diamondCut", data: BytesLike): Result;

  events: {
    "DiamondCut(tuple[],address,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DiamondCut"): EventFragment;
}

export class IDiamondCut extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IDiamondCutInterface;

  functions: {
    diamondCut(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "diamondCut(tuple[],address,bytes)"(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  diamondCut(
    _diamondCut: {
      facetAddress: string;
      action: BigNumberish;
      functionSelectors: BytesLike[];
    }[],
    _init: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "diamondCut(tuple[],address,bytes)"(
    _diamondCut: {
      facetAddress: string;
      action: BigNumberish;
      functionSelectors: BytesLike[];
    }[],
    _init: string,
    _calldata: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    diamondCut(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "diamondCut(tuple[],address,bytes)"(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    DiamondCut(_diamondCut: null, _init: null, _calldata: null): EventFilter;
  };

  estimateGas: {
    diamondCut(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "diamondCut(tuple[],address,bytes)"(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    diamondCut(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "diamondCut(tuple[],address,bytes)"(
      _diamondCut: {
        facetAddress: string;
        action: BigNumberish;
        functionSelectors: BytesLike[];
      }[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
